<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

<!--    1.配置数据源连接数据库  性能高-->
    <bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver">
        </property>
        <property name="url" value="jdbc:mysql://localhost:3306/lvjun?characterEncoding=utf-8">
        </property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
    </bean>

    <!--  2.让spring管理mybatis中的核心对象sqlsessionFactory-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        注入依赖对象 datasource-->
        <property name="dataSource" ref="dataSource"></property>
<!--        自动扫描mapper.xml-->
<!--        <property name="mapperLocations" value="classpath:com/mapper/*.xml"></property>-->
<!-- 读取mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>

    </bean>

<!--   3. dao接口  映射接口所在的包名 spring会自动查找其下的类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao"></property>
<!--sqlSessionFactory 指定sqlSessionFactorybean对象-->
        <property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>

    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>

    </bean>
<!--AOP 的方式集中管理项目中的事务 配置事务处理类-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--    配置事务通知属性-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
<!--        定义事务传播属性-->
        <tx:attributes>
<!--         propagation  传播  REQUIRED 需要值    SUPPORTS 支持   -->
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice>

<!--    配置事务切面  在业务逻辑层配置事务切入点-->
    <aop:config>
        <aop:pointcut id="mycut"
                      expression="execution(* com.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="mycut" />
    </aop:config>

<!--    扫描包中的注解 实现依赖注入-->

    <context:component-scan base-package="com"></context:component-scan>
<!--    开启注解功能-->
    <mvc:annotation-driven />
</beans>